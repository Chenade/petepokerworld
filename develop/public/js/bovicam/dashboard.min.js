/**
 * Created by Cloud on 2017/5/24.
 */
function bovicam(obj) {
    'systems' in obj && system_module(obj.systems);
    'networks' in obj && network_module(obj.networks);
    'devices' in obj && device_module(obj.devices);
    'services' in obj && service_module(obj.services);
    'firmware' in obj ? firmware_upgrade_panel(obj.firmware, 1) : firmware_upgrade_panel({}, 0);
}

function system_module(a) {
    var get_progress = function (value) {
        var cls = '';
        if (value > 90)
            cls = 'bg-danger';
        else if (value > 60)
            cls = 'bg-warning';
        else if (value > 40)
            cls = 'bg-info';
        else
            cls = 'bg-success';

        return cls;
    };

    try {
        $('#cam_temperature').html((a.sensor.board_temp2 / 100).toFixed(2) + ' &#8451');
        $('#cam_voltage').html((a.sensor.int_bat_vbus / 100).toFixed(2) + ' V');
    } catch (e) {
        console.warn(e);
    }

    for (var i in a) {
        switch (i) {
            case 'cpu':
            case 'mem':
                var bar = $('#cam_' + i).find('div[class=progress]');
                if (bar.length) {
                    bar = bar.find('div');
                    bar.attr('aria-valuenow', a[i]).css('width', a[i] + '%').html(a[i] + '%').removeClass('bg-danger bg-warning bg-info bg-success').addClass(get_progress(a[i]));
                } else {
                    $('#cam_' + i).html('<div class="progress" style="height: calc(1.5em + .5rem + 2px);"><div class="progress-bar ' + get_progress(a[i]) + '" aria-valuenow="' + a[i] + '" style="width: ' + a[i] + '%"> ' + a[i] + '%</div></div>');
                }
                break;
            case 'disk':
                if (a[i] != 'unknown' && a[i]) {
                    ['/', 'usbdisk', 'sdcard'].forEach(function (e) {
                        var data = 'Inactive', disk = 'cam_disk';
                        e == '/' || (disk = 'cam_' + e);
                        a[i][e] && (data = {
                            'used': formatBytes(a[i][e]['used'] * 1000000, 0, 1000),
                            'size': formatBytes(a[i][e]['size'] * 1000000, 0, 1000),
                            'percent': Math.round(((a[i][e]['used'] / a[i][e]['size']) * 100), 2),
                            'free': formatBytes((a[i][e]['size'] - a[i][e]['used']) * 1000000)
                        });

                        if (typeof data == 'object') {

                            var bar = $('#' + disk).find('div[class=progress]');
                            if (bar.length) {
                                bar = bar.find('div');
                                bar.attr('aria-valuenow', data['percent']).css('width', data['percent'] + '%').html(data['percent'] + '%').removeClass('bg-danger bg-warning bg-info bg-success').addClass(get_progress(data['percent']));
                            } else
                                $('#' + disk).html('<div class="d-flex"><div class="w-100"><div class="progress" style="height: calc(1.5em + .5rem + 2px);"><div class="progress-bar ' + get_progress(data['percent']) + '" aria-valuenow="' + data['percent'] + '" style="width: ' + data['percent'] + '%" aria-valuemin="0" aria-valuemax="100">' + data['percent'] + '%</div></div></div><div class="ml-auto"><button type="button" class="btn btn-outline-dark btn-sm free-space-btn" style="height: calc(1.2em + .5rem + 2px); padding: .0rem .5rem" data-free="' + data.free + '">' + data.size.replace(' ', '') + '</button></div></div>');
                        } else
                            $('#' + disk).html(data);
                    });
                }
                break;
            case 'date':
                $('#camSet_system_time_serverDate').text(moment(a[i]).format('YYYY-MM-DD HH:mm:ss'));
                $('#cam_' + i).text(moment(a[i]).format('YYYY-MM-DD HH:mm:ss'));
                break;
            default:
                $('#cam_' + i).text(a[i]);
                break;
        }
    }
}

function network_module(a) {
    'throughput' in a && ('tx' in a.throughput && $('#cam_transmit').html((a.throughput.tx).toString() + ' KB'), 'rx' in a.throughput && $('#cam_receive').html((a.throughput.rx).toString() + ' KB'));
    if ('ap_ssid' in a) {
        for (var iface in a) {
            if (a[iface] != 'unknown') {
                if (iface == 'gps') {
                    if (typeof a[iface] == 'object') {
                        var zone = $('#cam_timezone').text(), time = null, nofix = null;
                        a[iface]['available'] ? nofix = 'yes' : nofix = 'no';
                        zone && zone != 'Loading...' && a[iface]['utc'] && (time = moment(a[iface]['utc']).tz(zone).format('YYYY-MM-DD HH:mm:ss'));
                        var text = '<tr><th scope="row">' + langDict.longitude + '</th><td>' + a[iface]['longitude'] + '</td></tr>';
                        text += '<tr><th scope="row">' + langDict.latitude + '</th><td>' + a[iface]['latitude'] + '</td></tr>';
                        text += '<tr><th scope="row">' + langDict.lastUpdate + '</th><td>' + time + '</td></tr>';
                        text += '<tr><th scope="row">' + langDict.status + '</th><td>' + nofix + '</td></tr>';
                        $('#cam_gps_ip').html('<table class="table table-sm table-hover"><tbody>' + text + '</tbody></table>');
                    } else $('#cam_gps_ip').html(a[iface]);
                } else if (iface == 'lte') {
                    if (typeof a[iface] == 'object') {
                        var lteip = '';
                        for (var i in a['lte']) lteip += (a['lte'][i] + '<br/>');
                        $('#cam_lte_ip').html(lteip);
                    } else $('#cam_lte_ip').html('No Connection');
                } else {
                    if ('ap_ssid' == iface) {
                        var ssid = a[iface];
                        ssid.length || (ssid = 'N/A'), $('#cam_' + iface).text(ssid);
                    } else $('#cam_' + iface + '_ip').text(a[iface]);
                }
            }
        }
    } else {
        var connected = false;
        $.each(['ap', 'wired', 'wifi', 'lte', 'gps'], function (index, iface) {
            switch (iface) {
                case 'ap':
                    $('#cam_ap_ssid').html(iface in a ? a[iface]['ssid'] : 'N/A');
                    $('#cam_ap_ip').html(iface in a ? a[iface]['ip'] : 'Disabled');
                    break;
                case 'wired':
                case 'wifi':
                    iface in a ? (a[iface]['connected'] ? ($('#cam_' + iface + '_ip').html(a[iface]['ip']), connected = true) : $('#cam_' + iface + '_ip').html('No Connection')) : $('#cam_' + iface + '_ip').html('No Connection');
                    break;
                case 'lte':
                    var lteip = '';
                    if (iface in a) for (var lte in a[iface]) if (a[iface][lte]['connected']) {
                        connected = true;
                        lteip += (a[iface][lte]['ip'] + '<br/>');
                    }
                    $('#cam_lte_ip').html(lteip.length ? lteip : 'No Connection');
                    break;
                case 'gps':
                    if (typeof a[iface] == 'object') {
                        var zone = $('#cam_timezone').text(), time = null, nofix = null;
                        a[iface]['available'] ? nofix = 'yes' : nofix = 'no';
                        zone && zone != 'Loading...' && a[iface]['utc'] && (time = moment(a[iface]['utc']).tz(zone).format('YYYY-MM-DD HH:mm:ss'));
                        var text = '<tr><th scope="row">' + langDict.longitude + '</th><td>' + a[iface]['longitude'] + '</td></tr>';
                        text += '<tr><th scope="row">' + langDict.latitude + '</th><td>' + a[iface]['latitude'] + '</td></tr>';
                        text += '<tr><th scope="row">' + langDict.lastUpdate + '</th><td>' + time + '</td></tr>';
                        text += '<tr><th scope="row">' + langDict.status + '</th><td>' + nofix + '</td></tr>';
                        $("#cam_gps_ip").html('<table class="table table-sm table-hover"><tbody>' + text + '</tbody></table>');
                    } else $('#cam_gps_ip').html(a[iface]);
                    break;
            }
        });
        //connected || $.growl.warning({message: 'No interface can connection to check-up server, please check smartlink setting or wait a moment'});
    }
}

function device_module(dev) {

    for (var i in dev) switch (i) {
        case 'channels':
            if (Array.isArray(dev[i]) && dev[i].length >= 2) {
                for (var cid = 0; cid < 2; cid++) {
                    var channel = dev[i][cid];
                    if (typeof channel == 'object') {
                        $('#cam_channel' + (cid + 1) + '_dev').html('<i class="fas ' + (channel.connected ? 'fa-check-circle text-success' : 'fa-times-circle') + '" style="font-size: 1.5em">');
                    } else {
                        $('#cam_channel' + (cid + 1) + '_dev').html('<i class="fas fa-question-circle text-warning" style="font-size: 1.5em">');
                    }
                }
            }
            break;
        default:
            $('#cam_' + i + '_dev').html('<i class="fas ' + (dev[i] ? 'fa-check-circle text-success' : 'fa-times-circle') + '" style="font-size: 1.5em">');
            break;
    }
}

function service_module(a) {
    for (var service in a) {
        switch (service) {
            case 'live':
            case 'publishing':
            case 'recording':
                for (var cid = 0; cid < 2; cid++) {
                    var img = $('#cam_' + service + '_channel' + (cid + 1)).find('img'),
                        icon = 'fas fa-question-circle text-warning';

                    switch (a[service][cid]) {
                        case 'running':
                            icon = 'fas fa-play text-success';
                            break;
                        case 'dropping-frames':
                            icon = 'fas fa-play text-warning';
                            break;
                        case 'idle':
                            icon = 'fas fa-check-square text-success';
                            break;
                        case 'disabled':
                            icon = 'fas fa-toggle-off';
                            break;
                        case 'connecting':
                            icon = 'fas fa-circle-notch fa-spin text-warning';
                            break;
                        case 'error':
                            icon = 'fas fa-times text-danger';
                            break;
                    }

                    if (img.length) {
                        img.parent('div').find('i').attr('class', icon);
                    } else {
                        var popover = ' data-toggle="popover" data-trigger="hover" data-content="' + capitalizeFirstLetter('channel' + (cid + 1) + ' ' + service + ' ' + a[service][cid]) + '" data-placement="auto" ',
                            inner = '<div style="position:absolute;z-index:2;padding-top:35px;padding-left:40px;"> <i class="' + icon + '" style="font-size: 1.6em"></i></div>';

                        img = '<img src="/img/' + service + '_channel' + (cid + 1) + '.png" style="position: absolute; width: 55px; height: 55px;">';

                        $('#cam_' + service + '_channel' + (cid + 1)).html('<div style="width:55px;height:55px;"' + popover + '>' + img + inner + '</div>');
                    }
                }
                break;
            case 'ntp':
                var content = 'Last updated: ' + moment(a[service]['lastUpdated']).format('YYYY-MM-DD HH:mm:ss');

                if ($('#cam_' + service).find('div').length) {
                    $('#cam_' + service).find('div').attr('data-content', content);
                } else {
                    var popover = a[service]['lastUpdated'] ? ' data-toggle="popover" data-trigger="hover" data-content="' + content + '" data-placement="auto" ' : '';
                    $('#cam_' + service).html('<div ' + popover + '>' + capitalizeFirstLetter(a[service]['status'] ? a[service]['status'] : a[service]) + '</div>');
                }
                break;
            case 'rtmp':
                $('#cam_' + service).html(capitalizeFirstLetter(a[service]));
                break;
            case 'vpn':
                if (typeof a[service] == 'string') {
                    var str = a[service].split(', ');
                    $('#cam_' + service).html(capitalizeFirstLetter(str[0]));
                    $('#cam_' + service + '_ip').html(capitalizeFirstLetter(str[1]));
                } else if (typeof a[service] == 'object')
                    a[service]['enabled'] ? ($('#cam_vpn').html(capitalizeFirstLetter(a[service]['status']['content'])), $('#cam_vpn_ip').html(capitalizeFirstLetter(a[service]['status']['ip']))) : ($('#cam_vpn').html('Disabled'), $('#cam_vpn_ip').html('No Connection'));
                break;
        }
    }
    $('[data-toggle="popover"]').popover();
}