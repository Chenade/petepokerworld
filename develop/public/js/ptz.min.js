function ptz_controller(key, url, data, cb) {
    ajax('PUT', '/agent/api', data_format('/api/device/ctrl', 0, 'POST', {
        'payload': data,
        'target': 'put',
        'url': url,
        'sn': key
    }, null), function (a) {
        cb(a);
    });
}

function get_mq_status(key, cb) {
    ajax('PUT', '/agent/api', data_format('/api/device/ctrl', 0, 'POST', {
        'payload': {},
        'target': 'get',
        'url': '/api/ptz/status',
        'sn': key
    }, null), function (a) {
        a.error ? ($('.fa-circle').css('color', 'red'), $.growl.error({message: a.error})) : ($('.fa-circle').css('color', 'lawngreen'));
        cb(a);
    });
}

function ptz_model_type(model) {
    //model = 'R300';
    es5_includes([model], 'R300') ? ($('.new-ptz').hide(), $('.old-ptz').show()) : ($('.new-ptz').show(), $('.old-ptz').hide());
}

function controller(obj) {
    'step' in obj && $('#step')[0].noUiSlider.set(obj.step);
    'zoom' in obj && $('#zoom')[0].noUiSlider.set(obj.zoom);
    'focus' in obj && $('#focus')[0].noUiSlider.set(obj.focus);
    'auto' in obj && ($('#focus').attr('disabled', obj.auto), $('#focus_auto').prop('checked', obj.auto));
    'posX' in obj && 'posY' in obj && $('#dragx').css({'left': obj.posX + 62, 'top': 62 - obj.posY});
    'ir' in obj && $('#ir_sw').prop('checked', obj.ir);
    'highSensitivity' in obj && $('#hs_sw').prop('checked', obj.highSensitivity);

    $('.fa-circle').css('color', 'green');
    var ul = $('#configurations').find('.dropdown-menu');
    ul.empty();

    try {
        for (var i = 0; i < 8; i++) {
            ul.append('<a class="dropdown-item configuration" href="#" id="config_' + i + '" data-id="' + i + '">' + (i + 1) + '.&emsp;' + obj.configs[i]['name'] + '</a>');
        }
        $('#configurations').find('.input-group-addon').find('i').html('&ensp;' + (obj.preset + 1));
        $('#configurations').find('input').val(obj.configs[obj.preset]['name']);
        $('#configurations').attr('data-id', obj.preset);
    } catch (e) {

    }
}

$(document).ready(function () {
    loading(true);

    const sheet = document.createElement('style');
    sheet.innerHTML = `
        #player {width: 640px; height: 360px; border-radius: 4px; object-fit: fill;}
        video::-webkit-media-controls-timeline {display: none;}
        video::-webkit-media-controls-current-time-display{display: none;}
        video::-webkit-media-controls-time-remaining-display {display: none;}
        video::-webkit-media-controls-toggle-closed-captions-button {display: none;}`;
    document.body.appendChild(sheet);

    var loading_ = function (state) {
        if (state) {
            $('#save_btn').button('loading');
            $('#dropdown-menu').prop('disabled', 1);
            $('#ir_sw').prop('disabled', 1);
            $('#hs_sw').prop('disabled', 1);

            $('#focus').attr('disabled', 1);
            $('#zoom').attr('disabled', 1);
            $('#step').attr('disabled', 1);

            $('#configurations').find('input[type="text"]').prop('disabled', 1);
        } else {
            $('#save_btn').button('reset');
            $('#dropdown-menu').prop('disabled', 0);
            $('#ir_sw').prop('disabled', 0);
            $('#hs_sw').prop('disabled', 0);

            $('#focus').removeAttr('disabled');
            $('#zoom').removeAttr('disabled');
            $('#step').removeAttr('disabled');

            $('#configurations').find('input[type="text"]').prop('disabled', 0);
        }
    };

    var status = null, step = $('#step')[0], zoom = $('#zoom')[0],
        focus = $('#focus')[0];
    noUiSlider.create(step, {
        connect: true,
        start: 1,
        step: 1,
        range: {
            'min': 0,
            'max': 10
        },
        pips: {
            mode: 'values',
            values: [0, 5, 10],
            density: 10
        }
    });
    noUiSlider.create(zoom, {
        start: 1,
        step: 1,
        range: {
            'min': 1,
            'max': 42
        },
        pips: {
            mode: 'values',
            values: [1, 3, 6, 9, 12, 15, 18, 21, 24, 27, 30, 33, 36, 39, 42],
            density: 5
        }
    });
    noUiSlider.create(focus, {
        start: 20,
        step: 1,
        range: {
            'min': 0,
            'max': 100
        }, pips: {
            mode: 'values',
            values: [0, 7, 14, 21, 28, 35, 42, 49, 56, 63, 70, 77, 85, 92, 100],
            density: 1
        }
    });
    $('#zoom').find('.noUi-value.noUi-value-horizontal.noUi-value-large').each(function () {
        if (parseInt($(this).html()) == 30)
            $(this).html(langDict.digital);
        else $(this).html($(this).html() + 'x');
    });
    $('#focus').find('.noUi-value.noUi-value-horizontal.noUi-value-large').each(function () {
        switch (parseInt($(this).html())) {
            case 0:
                $(this).html('1<br\>cm');
                break;
            case 7:
                $(this).html('11<br\>cm');
                break;
            case 14:
                $(this).html('30<br\>cm');
                break;
            case 21:
                $(this).html('80<br\>cm');
                break;
            case 28:
                $(this).html('1.2<br\>m');
                break;
            case 35:
                $(this).html('1.5<br\>m');
                break;
            case 42:
                $(this).html('1.65<br\>m');
                break;
            case 49:
                $(this).html('2<br\>m');
                break;
            case 56:
                $(this).html('2.5<br\>m');
                break;
            case 63:
                $(this).html('3.1<br\>m');
                break;
            case 70:
                $(this).html('4.2<br\>m');
                break;
            case 77:
                $(this).html('6<br\>m');
                break;
            case 85:
                $(this).html('10<br\>m');
                break;
            case 92:
                $(this).html('20<br\>m');
                break;
            case 100:
                $(this).html('&infin;');
                break;
        }
    });

    $('#ptz_tree').jstree({
        "plugins": ["wholerow", "changed", 'ui'],
        "search": {"show_only_matches": false, "show_only_matches_children": false},
        'core': {
            'data': {
                'text': 'PTZ ' + langDict.list,
                'icon': 'fas fa-stream',
                'id': 'root',
                'children': []
            },
            'themes': {
                'name': 'proton',
                'responsive': true,
                'variant': 'large'
            }, 'check_callback': true, 'multiple': false
        }
    }).bind("loaded.jstree", function (event, data) {
        polling();
    }).on('changed.jstree', function (event, data) {
        if (data.action == 'select_node') {

            var cam = $('#ptz_tree').jstree('get_node', '#').children_d;

            if (object.running) {
                $.growl.warning({message: langDict.busyPtz});
                //todo: selecting last selected
                return false;
            } else {
                var node = data.node.original, currently = $('#player').attr('data-id');

                if (node.icon == icons.online && currently != node.more.id) {

                    for (var i in cam) $('#ptz_tree').jstree('disable_node', cam[i]);

                    object.running = true;
                    object.ready = false;

                    $('#player').attr('data-id', node.more.id);
                    $('.fa-circle').css('color', 'orange');

                    ptz_model_type(node.more.device.info.type);

                    if (object.player) {
                        object.player.close();
                        object.player = null;
                    }

                    object.player = new mse(document.getElementById('player'), node.more.mseUrl);
                    object.player.startup();

                    loading_(true);

                    get_mq_status(node.more.device.id, function (a) {
                        a.error || (object.ready = true);
                        object.running = false;
                        loading_(false);
                        controller(a);

                        for (var i in cam) $('#ptz_tree').jstree('enable_node', cam[i]);
                    });
                }
            }
        }
    });

    var object = {'online': {}, 'first': true, 'ready': false, 'running': true, 'player': null}, polling = function () {
        ajax('PUT', '/agent/api', data_format('/api/live/list', 0, 'GET', {}, null), function (a) {
            if (a.error) {
                $.growl.error({message: a.error});
            } else {
                var _online = {};
                for (var i in a.liveList) if (
                    a.liveList[i].device.info.type.startsWith('R3') || a.liveList[i].device.info.type.includes('PTZ')) {
                    var id = 'ptz_' + a.liveList[i].id, node = $('#ptz_tree').jstree('get_node', id);
                    _online[a.liveList[i].id] = '';
                    object.online[a.liveList[i].id] = a.liveList[i];

                    if (node) {  // update node
                        node.icon = icons.online;
                        node.original.icon = icons.online;
                        node.original.more = a.liveList[i];
                        $('#ptz_tree').jstree('redraw_node', id);
                    } else {
                        $('#ptz_tree').jstree().create_node('root', {
                            'text': a.liveList[i].id,
                            'icon': icons.online,
                            'state': {'selected': object.first},
                            'more': a.liveList[i],
                            'id': id
                        }, "last", function () {
                            $('#ptz_tree').jstree('_open_to', id);
                        });
                        if (object.first) {
                            object.first = false;
                            $('#player').attr('data-id', a.liveList[i].id);

                            object.player = new mse(document.getElementById('player'), a.liveList[i].mseUrl);
                            object.player.startup();

                            ptz_model_type(a.liveList[i].device.info.type);
                            loading_(true);
                            get_mq_status(a.liveList[i].device.id, function (b) {
                                object.running = false;
                                b.error || (object.ready = true);
                                loading(false);
                                //PTZ btns re-enable
                                loading_(false);
                                controller(b);
                                keepalive();
                            });
                        }
                    }
                }
                for (var i in object.online) if (!(i in _online)) {
                    var id = 'ptz_' + i, node = $('#ptz_tree').jstree('get_node', i);
                    node.icon = icons.offline;
                    node.original.icon = icons.offline;
                    delete object.online[i];
                    $('#player').attr('data-id') == i && $('#player').attr('data-id', '');
                    $('#ptz_tree').jstree('redraw_node', id);
                }

                //Object.keys(object.online).length == 0 && $.growl.warning({message: 'no online ptz'});
                loading(false);
            }
            setTimeout(polling, 3000);
        });
    }, errorTimes = 0, keepalive = function () {
        const id = $('#player').attr('data-id');

        if (id) {

            if (object.player) {
                object.player.heartbeat += 1;

                if (object.player.heartbeat >= 5) {

                    if (object.online[id]) {

                        object.player.close();
                        object.player = null;

                        object.player = new mse(document.getElementById('player'), object.online[id].mseUrl);
                        object.player.startup();
                    } else
                        $.growl.warning({message: `${id} offline...`});

                    object.player.heartbeat = 0;
                }
            }
        }
        setTimeout(keepalive, 1000);
    };

    step.noUiSlider.on('change.one', function () {
        object.ready && ptz_controller(object.online[$('#player').attr('data-id')].device.id, '/api/ptz/step', {'step': parseInt(this.get())}, function (a) {
            a.error && $.growl.error({message: a.error});
        });
    });
    zoom.noUiSlider.on('change.one', function () {
        object.ready && ptz_controller(object.online[$('#player').attr('data-id')].device.id, '/api/ptz/zoom', {'zoom': parseInt(this.get())}, function (a) {
            a.error && $.growl.error({message: a.error});
        });
    });
    focus.noUiSlider.on('change.one', function () {
        object.ready && ptz_controller(object.online[$('#player').attr('data-id')].device.id, '/api/ptz/focus', {'focus': parseInt(this.get())}, function (a) {
            a.error && $.growl.error({message: a.error});
        });
    });
    $("#dragx").draggable({
        containment: "#box",
        stop: function () {
            var x = parseInt($(this).css('left')), y = parseInt($(this).css('top'));
            object.ready && ptz_controller(object.online[$('#player').attr('data-id')].device.id, '/api/ptz/position', {
                'posX': x - 62,
                'posY': 62 - y,
            }, function (a) {
                a.error && $.growl.error({message: a.error});
            });
        }
    });
    $('#focus_auto').on('click', function () {
        var enabled = $(this).prop('checked');

        if (enabled)
            $('#focus').attr('disabled', enabled);
        else
            $('#focus').removeAttr('disabled');

        object.ready && ptz_controller(object.online[$('#player').attr('data-id')].device.id, '/api/ptz/focus', {
            'auto': enabled
        }, function (a) {
            a.error && $.growl.error({message: a.error});
        });
    });
    $('#up,#down,#right,#left,#in,#out').on('click', function (e) {
        var btn = $(this).attr('id'), obj = {};
        if (es5_includes(['up', 'down', 'right', 'left'], btn)) {
            var mapping = {'up': '2', 'down': '8', 'right': '6', 'left': '4'};
            object.ready && ptz_controller(object.online[$('#player').attr('data-id')].device.id, '/api/ptz/move', {
                'direction': mapping[btn]
            }, function (a) {
                a.error && $.growl.error({message: a.error});
            });
        } else if (es5_includes(['in', 'out'], btn)) {
            var value = 10;
            btn == 'in' && (value = 40);
            object.ready && ptz_controller(object.online[$('#player').attr('data-id')].device.id, '/api/ptz/zoom', {
                'zoom': value
            }, function (a) {
                a.error && $.growl.error({message: a.error});
            });
        }
    });
    $('.btn').on('click', function (e) {
        var btn = $(this), move = function (val) {
            //btn.prop('disabled', 1);
            object.ready && ptz_controller(object.online[$('#player').attr('data-id')].device.id, '/api/ptz/move', {
                'direction': val.toString()
            }, function (a) {
                a.error ? $.growl.error({message: a.error}) : $('#dragx').css({
                    'left': a.posX + 62, 'top': 62 - a.posY
                });
                //btn.prop('disabled', 0);
            });
        };
        if (btn.find('svg').length) {
            switch (btn.find('svg').attr('class').replace('arrow-icon arrow-', '')) {
                case 'up-left':
                    move(1);
                    break;
                case 'up':
                    move(2);
                    break;
                case 'up-right':
                    move(3);
                    break;
                case 'left':
                    move(4);
                    break;
                case 'right':
                    move(6);
                    break;
                case 'down-left':
                    move(7);
                    break;
                case 'down':
                    move(8);
                    break;
                case 'down-right':
                    move(9);
                    break;
            }
        } else if (btn.find('i').hasClass('fa-home')) {
            move(5);
        } else {
            if (object.ready) switch (btn.attr('id')) {
                case 'save_btn':
                    $('#default_btn').prop('disabled', 1);
                    btn.button('loading');
                    var obj = {
                        "write": true,
                        "id": parseInt($('#configurations').attr('data-id')),
                        "name": $('#configurations').find('input').val()
                    };
                    ptz_controller(object.online[$('#player').attr('data-id')].device.id, "/api/ptz/config", obj, function (r) {
                        $('#config_' + obj.id).html((obj.id + 1) + '.&emsp;' + obj.name);
                        r.error ? $.growl.error({message: r.error}) : ($.growl.notice({message: '# ' + (obj.id + 1) + ' configuration save.'}), status = r);
                        btn.button('reset');
                        $('#default_btn').prop('disabled', 0);
                    });
                    break;
            }
        }
    });
    $('#ir_sw,#hs_sw').on('click', function (e) {
        var sw = $(this), target = sw.attr('id').split('_')[0], state = sw.prop('checked');
        if (object.ready) {
            ptz_controller(object.online[$('#player').attr('data-id')].device.id, '/api/ptz/' + target, {'enabled': state}, function (a) {
                if (a.error)
                    $.growl.error({message: a.error});
                else {
                    target == 'ir' ? $.growl.notice({message: state ? 'enabled IR mode' : 'disabled IR mode'}) : $.growl.notice({message: state ? 'enabled High Sensitivity' : 'disabled High Sensitivity'});
                }
            });
        }
    });
    $(document).on('click', '.configuration', function (e) {
        var id = parseInt($(this).attr('data-id'));
        $('#configurations').prop('disabled', 1);
        $('#save_btn').button('loading');
        $('#load_btn').button('loading');
        ptz_controller(object.online[$('#player').attr('data-id')].device.id, '/api/ptz/config', {
            "write": false,
            "id": id
        }, function (r) {
            if (r.error) $.growl.error({message: r.error}); else {
                status = r;
                controller(r);
                $.growl.notice({message: 'load # ' + (id + 1) + ' configuration.'});
                $('#configurations').attr('data-id', id);
                $('#configurations').find('.fa-save').html('&ensp;' + (id + 1));
                $('#configurations').find('input').val(status['configs'][id]['name']);
            }
            $('#save_btn').button('reset');
            $('#load_btn').button('reset');
            $('#configurations').find('input').prop('disabled', 0);
        });
    });
});